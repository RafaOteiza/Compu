/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package cl.duoc.computec.Views;
import cl.duoc.computec.DTO.EquipoDTO;
import cl.duoc.computec.Implementations.EquipoServiceImpl;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Rafa Oteiza
 */
public class RegistroEquipo extends javax.swing.JInternalFrame {
    private EquipoServiceImpl equipoService;
    private List<EquipoDTO> listaEquipos; // Agrega esta lista para almacenar los equipos

    public RegistroEquipo(EquipoServiceImpl equipoService) {  // Cambiado a EquipoServiceImpl
        this.equipoService = equipoService;
        this.listaEquipos = new ArrayList<>(); // Inicializa la lista de equipos
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setClosable(true);
        setForeground(java.awt.Color.white);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("REGISTRO DE EQUIPOS");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        jLabel3.setText("Modelo:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("CPU");

        jLabel6.setText("Tamaño HDD:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("CANCELAR");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("GUARDAR");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("RAM:");

        jLabel8.setText("VALOR");

        jLabel9.setText("TIPO:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laptot", "Desktop" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jLabel10.setText("Potencia Fuente:");

        jLabel11.setText("Factor Forma:");

        jLabel12.setText("Tamaño Pantalla:");

        jLabel13.setText("Puertos USB");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jToggleButton1)
                                .addGap(71, 71, 71)
                                .addComponent(jToggleButton2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        String nombre = jTextField1.getText();
        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Nombre no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear objeto EquipoDTO y agregarlo a la lista
        EquipoDTO equipoDTO = new EquipoDTO();
        equipoDTO.setNombre(nombre);
        listaEquipos.add(equipoDTO);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        String modelo = jTextField2.getText();
        if (modelo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Modelo no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Asignar el valor al objeto EquipoDTO
        listaEquipos.get(listaEquipos.size() - 1).setModelo(modelo);
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        String tamanoHDDText = jTextField4.getText();
        if (tamanoHDDText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Tamaño HDD no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int tamanoHDD = Integer.parseInt(tamanoHDDText);
            // Asignar el valor al objeto EquipoDTO
            listaEquipos.get(listaEquipos.size() - 1).setTamanoDiscoDuroMB(tamanoHDD);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para Tamaño HDD", "Error de validación", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        String cpu = jTextField5.getText();
        // Asignar el valor al objeto EquipoDTO
        listaEquipos.get(listaEquipos.size() - 1).setCpu(cpu);
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // Descripción
        String descripcion = jTextField3.getText();
        // Asignar el valor al objeto EquipoDTO
        listaEquipos.get(listaEquipos.size() - 1).setDescripcion(descripcion);
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        String ramText = jTextField6.getText();
        if (ramText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo RAM no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int ram = Integer.parseInt(ramText);
            // Asignar el valor al objeto EquipoDTO
            listaEquipos.get(listaEquipos.size() - 1).setRamGB(ram);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para RAM", "Error de validación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String selectedType = (String) jComboBox1.getSelectedItem();

        if ("Laptop".equals(selectedType)) {
            jLabel12.setEnabled(true);
            jLabel13.setEnabled(true);
            jTextField8.setEnabled(true);
            jTextField11.setEnabled(true);

            // Desbloquear la edición de los campos
            jTextField8.setEditable(true);
            jTextField11.setEditable(true);
        } else if ("Desktop".equals(selectedType)) {
            jLabel12.setEnabled(false);
            jLabel13.setEnabled(false);
            jTextField8.setEnabled(true);  // Permitir la edición, aunque podría estar deshabilitado
            jTextField11.setEnabled(true);

            // Limpiar y bloquear los campos
            jTextField8.setText("");
            jTextField11.setText("");
            jTextField8.setEditable(false);
            jTextField11.setEditable(false);
        } else {
            // En caso de otro tipo (podría agregar más opciones), desbloquear los campos relevantes aquí
            jLabel12.setEnabled(false);
            jLabel13.setEnabled(false);
            jTextField8.setEnabled(false);
            jTextField11.setEnabled(false);

            // Limpiar y bloquear los campos
            jTextField8.setText("");
            jTextField11.setText("");
            jTextField8.setEditable(false);
            jTextField11.setEditable(false);
        }

        // Actualizar el estado actual
        updateFieldStatus(selectedType);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        String potenciaFuente = jTextField7.getText();
        // Asignar el valor al objeto EquipoDTO
        listaEquipos.get(listaEquipos.size() - 1).setPotenciaFuente(potenciaFuente);
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        String factorForma = jTextField8.getText();
        // Asignar el valor al objeto EquipoDTO
        listaEquipos.get(listaEquipos.size() - 1).setFactorForma(factorForma);
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        String tamanoPantallaText = jTextField9.getText();
        if (tamanoPantallaText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Tamaño Pantalla no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double tamanoPantalla = Double.parseDouble(tamanoPantallaText);
            // Asignar el valor al objeto EquipoDTO
            listaEquipos.get(listaEquipos.size() - 1).setTamanoPantalla(tamanoPantalla);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para Tamaño Pantalla", "Error de validación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        String puertosUSBText = jTextField10.getText();
        if (puertosUSBText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Puertos USB no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int puertosUSB = Integer.parseInt(puertosUSBText);
            // Asignar el valor al objeto EquipoDTO
            listaEquipos.get(listaEquipos.size() - 1).setCantidadPuertosUSB(puertosUSB);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para Puertos USB", "Error de validación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        String valorText = jTextField11.getText();
        if (valorText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Valor no puede estar vacío", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            double valor = Double.parseDouble(valorText);
            // Asignar el valor al objeto EquipoDTO
            listaEquipos.get(listaEquipos.size() - 1).setPrecio(valor);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para Valor", "Error de validación", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // Botón Guardar - Guardar el equipo en el servicio
        // Obtener los valores de los campos
        String nombre = jTextField1.getText();
        String modelo = jTextField2.getText();
        String descripcion = jTextField3.getText();
        String cpu = jTextField5.getText();
        String tamanoHDDText = jTextField4.getText();
        String ramText = jTextField6.getText();
        String potenciaFuente = jTextField7.getText();
        String factorForma = jTextField8.getText();
        String tamanoPantallaText = jTextField9.getText();
        String puertosUSBText = jTextField10.getText();
        String valorText = jTextField11.getText();

        // Validar que los campos obligatorios no estén vacíos
        if (nombre.isEmpty() || modelo.isEmpty() || descripcion.isEmpty() || cpu.isEmpty() ||
            tamanoHDDText.isEmpty() || ramText.isEmpty() || potenciaFuente.isEmpty() ||
            factorForma.isEmpty() || valorText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos obligatorios deben estar llenos", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Convertir los valores a los tipos correspondientes
        int tamanoHDD = Integer.parseInt(tamanoHDDText);
        int ram = Integer.parseInt(ramText);
        double tamanoPantalla = 0.0;  // Valor por defecto para equipos Desktop
        int puertosUSB = 0;  // Valor por defecto para equipos Desktop
        double valor = Double.parseDouble(valorText);

        // Verificar si es una Laptop para asignar valores específicos
        String selectedType = (String) jComboBox1.getSelectedItem();
        if ("Laptop".equals(selectedType)) {
            tamanoPantalla = Double.parseDouble(tamanoPantallaText);
            puertosUSB = Integer.parseInt(puertosUSBText);
        }

        // Crear un nuevo equipo y agregarlo a la lista
        EquipoDTO equipoDTO = new EquipoDTO(nombre, modelo, descripcion, cpu, tamanoHDD, ram, valor,
                selectedType, potenciaFuente, factorForma, tamanoPantalla, puertosUSB);
        listaEquipos.add(equipoDTO);

        // Limpiar campos para permitir el registro de un nuevo equipo
        limpiarCampos();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
       this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    
    private void updateFieldStatus(String selectedType) {
        // Realizar un seguimiento del estado actual y aplicar configuraciones adicionales si es necesario
        // Podría necesitar agregar lógica adicional según los requisitos
    }
    
    private void limpiarCampos() {
        // Limpiar los JTextField
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");

        // Restablecer valores predeterminados y deshabilitar campos específicos de Laptop
        jComboBox1.setSelectedItem("Desktop");
        jLabel12.setEnabled(false);
        jLabel13.setEnabled(false);
        jTextField8.setEnabled(false);
        jTextField9.setEnabled(false);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
